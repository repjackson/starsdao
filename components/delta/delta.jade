template(name='delta')
    with current_model
        .ui.stackable.padded.grid
            .row
                .eight.wide.right.aligned.scrolling.column
                    .ui.right.aligned.inline.inverted.header
                        i.icon(class=icon)
                        | #{title}
                    unless is_loading
                        if is_admin
                            .ui.icon.circular.big.black.button.add_model_doc(title="Add #{title}")
                                i.green.plus.icon
                        //- if can_edit
                            //- +edit_button
                        if is_admin
                            .ui.icon.black.circular.button.edit_model
                                i.cog.icon
                                //- | Configure #{plural}
                        // .ui.divider
                        // // each sessions
                        // //     .ui.icon.button.select_session(class=session_selector_class title='select session')
                        // //         i.play.icon
                                
                        if current_delta
                            if is_dev
                                .ui.icon.black.circular.button.print_delta(title='Print Session Doc')
                                    i.code.icon
                            .ui.reset.icon.black.circular.button(title='Reload Session')
                                i.refresh.icon
                            .ui.delete_delta.icon.black.circular.button(title='Delete Session')
                                i.trash.icon
                        else
                            .create_delta.ui.button.pointer(title='new session')
                                i.plus.icon
                                |Session
                    // |did: #{session_delta_id}
                            
                    each current_delta.facets
                        +facet
                .eight.wide.column.scrolling
                    each current_delta.result_ids
                        +delta_result
                


template(name='facet')
    if filtering_res
        //- .ui.accordion
        //-     .active.title
        .ui.inverted.header 
            if icon
                i.icon(class=icon)
            if title
                |#{title}
            else 
                |#{key}
            //- i.dropdown.icon
            //- .active.content
        .ui.icon.small.inverted.transparent.input
            i.inverted.search.icon
            input.add_filter(type='text')
        each filtering_res
            if name
                .selector.ui.circular.big.compact.button.toggle_selection(class=toggle_value_class title=count)
                    strong #{name}
                    //- small #{cal_count} #{count}
            else
                .selector.ui.circular.button.toggle_selection(class=toggle_value_class title=count)
                    strong [null]
                    //- small #{cal_count}

template(name='toggle_delta_config')
    if boolean_true
        .ui.grey.active.icon.button.disable_key(title=label)
            i.icon(class=icon)
            // | #{label}
    else
        .ui.icon.button.enable_key(title=label)
            i.icon(class=icon)
            // | #{label}



template(name='delta_result')
    with result 
        .ui.result.cloud.segment(class=loading_class)
            if title
                a.ui.header(href="/m/#{current_model.slug}/#{_id}/view")
                    if icon
                        i.icon(class=icon)
                    |#{title}
            .description
                each fields
                    +Template.dynamic template=view_template 
            .extra
                +user_list_toggle key='bookmark_ids' icon='bookmark' label='Bookmark' color='red'
                if is_model
                    a.ui.circular.button.route_model(href="/m/#{slug}")
                        i.sitemap.icon
                        |view model
                    if is_admin
                        a.ui.circular.button.route_model(href="/model/edit/#{_id}")
                            i.edit.icon
                            |edit model
                else
                    if is_admin
                        a.ui.circular.big.icon.black.button(href="/m/#{current_model.slug}/#{_id}/edit" title='edit')
                            i.pencil.icon
                            //- |edit
                    a.ui.circular.icon.big.black.button(href="/m/#{current_model.slug}/#{_id}/view" title='view')
                        i.eye.icon
                        //- |view
                each model.actions
                    +Template.dynamic template=this data=..
                //- if _author_id
                //-     +author_info
                +creation_info
                //- if _timestamp_tags
                //-     .ui.small.inline.grey.header timestamp tags
                //-     each _timestamp_tags
                //-         .ui.label #{this}
                
    
                    
